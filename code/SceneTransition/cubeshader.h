/*
Author: gre
License: MIT
*/

static const char *cubeVertexSource = "#version 330 core\n"
	"layout (location = 0) in vec3 aPos;\n"
	"layout(location = 1) in vec2 aTexCoord;\n"
	"out vec2 texCoord;\n"
	"void main()\n"
	"{\n"
	"	texCoord = aTexCoord;\n"
	"	gl_Position = vec4(aPos, 1.0);\n"
	"}\0";

static const char *cubeFragmentSource = "#version 330 core\n"
	"const float persp = 0.7;\n"
	"const float unzoom = 0.3;\n"
	"const float reflection = 0.4;\n"
	"const float floating = 3.0;\n"
	"\n"
	"out vec4 fragColor;\n"
	"in vec2 texCoord;\n"
	"uniform float progress;\n"
	"// texture samplers\n"
	"uniform sampler2D texture0;\n"
	"uniform sampler2D texture1;\n"
	"\n"
	"vec2 project (vec2 p)\n"
	"{\n"
	"	return p * vec2(1.0, -1.2) + vec2(0.0, -floating/100.);\n"
	"}\n"
	"\n"
	"bool inBounds (vec2 p)\n"
	"{\n"
	"	return all(lessThan(vec2(0.0), p)) && all(lessThan(p, vec2(1.0)));\n"
	"}\n"
	"\n"
	"vec4 bgColor (vec2 p, vec2 pfr, vec2 pto)\n"
	"{\n"
	"	vec4 c = vec4(0.0, 0.0, 0.0, 1.0);\n"
	"	pfr = project(pfr);\n"
	"	// FIXME avoid branching might help perf!\n"
	"	if (inBounds(pfr)) {\n"
	"		c += mix(vec4(0.0), texture(texture0, pfr), reflection * mix(1.0, 0.0, pfr.y));\n"
	"	}\n"
	"	pto = project(pto);\n"
	"	if (inBounds(pto)) {\n"
	"		c += mix(vec4(0.0), texture(texture1, pto), reflection * mix(1.0, 0.0, pto.y));\n"
	"	}\n"
	"	return c;\n"
	"}\n"
	"// p : the position\n"
	"// persp : the perspective in [ 0, 1 ]\n"
	"// center : the xcenter in [0, 1] , 0.5 excluded\n"
	"vec2 xskew (vec2 p, float persp, float center)\n"
	"{\n"
	"	float x = mix(p.x, 1.0-p.x, center);\n"
	"	return (\n"
	"		(\n"
	"		vec2( x, (p.y - 0.5*(1.0-persp) * x) / (1.0+(persp-1.0)*x) )\n"
	"		- vec2(0.5-distance(center, 0.5), 0.0)\n"
	"		)\n"
	"		* vec2(0.5 / distance(center, 0.5) * (center<0.5 ? 1.0 : -1.0), 1.0)\n"
	"		+ vec2(center<0.5 ? 0.0 : 1.0, 0.0)\n"
	"	);\n"
	"}\n"
	"\n"
	"void main()\n"
	"{\n"
	"	vec2 op = texCoord.xy;\n"
	"	float uz = unzoom * 2.0*(0.5-distance(0.5, progress));\n"
	"	vec2 p = -uz*0.5+(1.0+uz) * op;\n"
	"	vec2 fromP = xskew(\n"
	"		(p - vec2(progress, 0.0)) / vec2(1.0-progress, 1.0),\n"
	"		1.0-mix(progress, 0.0, persp),\n"
	"		0.0\n"
	"	);\n"
	"	vec2 toP = xskew(\n"
	"		p / vec2(progress, 1.0),\n"
	"		mix(pow(progress, 2.0), 1.0, persp),\n"
	"		1.0\n"
	"	);\n"
	"	// FIXME avoid branching might help perf!\n"
	"	if (inBounds(fromP)) {\n"
	"		fragColor = texture(texture0, fromP);\n"
	"		return;\n"
	"	}\n"
	"	else if (inBounds(toP)) {\n"
	"		fragColor = texture(texture1, toP);\n"
	"		return;\n"
	"	}\n"
	"	fragColor = bgColor(op, fromP, toP);\n"
	"}\0";